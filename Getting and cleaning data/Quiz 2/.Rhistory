X<-2
x^x
x^2
x ^ x
X <- 2
X ^ X
source("http://bioconducter.org/biocLite.R")
bioclite()
source("http://bioconducter.org/bioclite.R")
source("http://bioconducter.org/biocLite.R")
biocLite
biocLite()
find.package("devtools")
install.packages('devtools')
library(devtools)
install.packages('devtools')
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtolls()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
find_KernSmooth
find_KernSmooth()
ls
//
cd Thiri-Dae
cd//
cd..
ls
load("C:/Users/Thiri-Dae Morgurth/R-course/HelloWorld.md")
## THis is a markdown file
## THis is a markdown file
git init
## This is a markdown file
## This is a Markup File
source('W:/R/R-course/datasciencecoursera/HelloWorld.md')
source('W:/R/R-course/datasciencecoursera/HelloWorld.md')
source('W:/R/R-course/datasciencecoursera/HelloWorld.md')
source('W:/R/R-course/datasciencecoursera/HelloWorld.md')
?inverse
?inv
?solve
?matrix
matrix((sample 1:100, 25), nrow = 5, ncol = 6 , dimnames = LETTERS(1:6))
matrix((sample (1:100, 25)), nrow = 5, ncol = 6 , dimnames = LETTERS(1:6))
?letters
matrix((sample (1:100, 25)), nrow = 5, ncol = 6 , dimnames = LETTERS, letters)
?matrix
matrix((sample (1:100, 25)), nrow = 5, ncol = 6 , byrow = FALSE, dimnames = LETTERS, letters)
?letters
matrix((sample (1:100, 25)), nrow = 5, ncol = 6 , byrow = FALSE, dimnames = A:F, a:f)
matrix((sample (1:100, 25)), nrow = 5, ncol = 6 , byrow = FALSE, dimnames = A:F)
matrix((sample (1:100, 25)), nrow = 5, ncol = 6 , byrow = FALSE, dimnames = c(A:F, a:f)
23
matrix((sample (1:100, 25)), nrow = 5, ncol = 6)
matrix((sample (1:100, 25, replacement = FALSE)), nrow = 5, ncol = 6)
?sa,ple
?sample
matrix((sample (1:100, 25, replace = FALSE)), nrow = 5, ncol = 6)
matrix((sample (1:100, 30, replace = FALSE)), nrow = 5, ncol = 6)
x <- as.matrix((sample (1:100, 25, replace = FALSE)), nrow = 5, ncol = 6)
x
x <- matrix((sample (1:100, 25, replace = FALSE)), nrow = 5, ncol = 6)
x <- matrix((sample (1:100, 30, replace = FALSE)), nrow = 5, ncol = 6)
x
solve(x)
x <- matrix((sample (1:100, 25, replace = FALSE)), nrow = 5, ncol = 5)
x
solve(x)
?solve
x <- matrix((sample (1:100, 25, replace = FALSE)), nrow = 5, ncol = 5)
x
solve(x)
solve(x, x)
solve(x, x)
solve(2, x)
solve(3, 3)
solve(3, 37)
solve(3, 36)
solve(3, 48)
solve(4, 2)
solve(58)
c <- 58^-1
c
source('~/.active-rstudio-document')
makeCacheMatrix(1:25, 5, 5)
makeCacheMatrix(1:25, nrow = 5, ncol = 5)
makeCacheMatrix(1:25)
cacheSolve(1:25, 5, 5)
cacheSolve(1:25)
source('~/.active-rstudio-document')
makeVector(25)
source('~/.active-rstudio-document')
makeVector(25)
chachemean(25)
cachemean(25)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
cachemean(25)
makeVector(25)
m
cachemean(25)
source('~/.active-rstudio-document')
cachemean(25)
makeVector(25)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
makeVector(25)
cachemean(25)
cachemean
cachemean()
cachemean(x)
cachemean(25)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
makeVector(23)
cachemean(25)
cachemean(makeVector)
u <- makeVector(1:25)
cachemean (u)
u
cachemean (u)
source('~/.active-rstudio-document')
u <- makeCacheMatrix(1:25, 5, 5)
u <- makeCacheMatrix(5, 5)
u <- makeCacheMatrix(25)
cacheSolve (u)
source('~/.active-rstudio-document')
cacheSolve (u)
u <- makeCacheMatrix(25)
cacheSolve (u)
source('~/.active-rstudio-document')
cacheSolve (u)
?matrix
u <- makeCacheMatrix(c(1:25), 5, 5)
u <- makeCacheMatrix(c(1:25))
cacheSolve (u)
u <- makeCacheMatrix(c(1:25), nrow = 5, ncol = 5)
u <- makeCacheMatrix(c(1:25), nrow = 5, ncol = 5, byrow = FALSE, dimnames = NULL)
u <- makeCacheMatrix(c(25), nrow = 5, ncol = 5, byrow = FALSE, dimnames = NULL)
u <- makeCacheMatrix(1:25, nrow = 5, ncol = 5, byrow = FALSE, dimnames = NULL)
u <- makeCacheMatrix(data = NA, nrow = 5, ncol = 5, byrow = FALSE, dimnames = NULL)
source('~/.active-rstudio-document')
u <- akeCacheMatrix(data = NA, nrow = 5, ncol = 5, byrow = FALSE, dimnames = NULL)
source('~/.active-rstudio-document')
u <- akeCacheMatrix(data = NA, nrow = 5, ncol = 5, byrow = FALSE, dimnames = NULL)
u <- akeCacheMatrix(1:25)
u
source('~/.active-rstudio-document')
akeCacheMatrix
akeCacheMatrix(1:25, 5, 5)
akeCacheMatrix((1:25), 5, 5)
akeCacheMatrix((1:25), (5,5))
akeCacheMatrix((1:25), (5,))
akeCacheMatrix((1:25), (5))
akeCacheMatrix((1:25), [5,5])
matrix(c(1:25), 5,5)
akeCacheMatrix((c(1:25), 5,5))
akeCacheMatrix(matrix(c(1:25), 5,5))
source('~/.active-rstudio-document')
akeCacheMatrix(matrix(c(1:25), 5,5))
source('~/.active-rstudio-document')
makeCacheMatrix(matrix(c(1:25), 5 ,5))
u <- makeCacheMatrix(matrix(c(1:25), 5 ,5))
cacheSolve(u)
u
u <- makeCacheMatrix(matrix(c(75:100), 5 ,5))
cacheSolve(u)
u <- makeCacheMatrix(matrix(c(75:99), 5 ,5))
cacheSolve(u)
u <- makeCacheMatrix(matrix(c(75:99), 5 ,5 , byrow = TRUE))
cacheSolve(u)
u <- makeCacheMatrix(matrix(sample(1:200, 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
cacheSolve(u)
cacheSolve(u)
u <- makeVector(sample(1:200, 25 , replace = FALSE))
cacheMean(u)
cachemean(u)
u
cachemean(u)
matrix
source('~/.active-rstudio-document')
cacheSolve(u)
u <- makeCacheMatrix(matrix(sample(1:200, 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
cacheSolve(u)
7^7
source('W:/R/R-course/datasciencecoursera/Rprog-014/Assignment2/cachematrix.R')
cacheSolve(u)
solve(matrix(sample(1:200, 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
cacheSolve(u)
u <- makeCacheMatrix(matrix((1:25), 5 ,5 , byrow = TRUE))
cacheSolve(u)
?solve
a <- makeCacheMatrix(matrix((1:25), 5 ,5 , byrow = TRUE))
cacheSolve(a)
a <- makeCacheMatrix(matrix(sample(1:200, 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
cacheSolve (a)
cacheSolve (a)
a <- makeCacheMatrix(matrix(sample(1:25), 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
a <- makeCacheMatrix(matrix(sample(1:25, 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
cacheSolve(a)
cacheSolve(a)
source('W:/R/R-course/datasciencecoursera/Rprog-014/Assignment2/cachematrix.R')
cacheSolve(a)
a <- makeCacheMatrix(matrix(sample(1:200, 25 , replace = FALSE), 5 ,5 , byrow = TRUE))
cacheSolve(a)
cacheSolve(a)
swirl()
swirl()
cran <- tbl_df(mydf)
rm("mydf")
cran
?group-by()
?group_by()
?group_by
by_package <- group_by(cran, package, add = FALSE)
by_package
?summerize
?summarize
summarise(by_package, mean(size))
summarise(by_package, mean(size))
info()
summarise(cran, package, mean(size))
summarise(cran, cran$package, mean(size))
summarise(cran, package, mean(size))
summarise(by_package, mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, count, desc = TRUE)
top_counts_sorted <- arrange(top_counts, top_counts$count, descending = TRUE)
?arrange
?desc
?desc
top_counts_sorted <- arrange(top_counts$count, descending = TRUE)
top_counts_sorted <- arrange(top_counts$count, desc)
?arrange
top_counts_sorted <- arrange(top_counts, count, desc(disp))
top_counts_sorted <- arrange(top_counts, count, desc)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
view(top_unique_sorted)
View(top_unique_sorted)
submit()
submit()
submite()
submit()
View(result3)
source('~/.active-rstudio-document')
submit()
submit()
submit()
submit()
?mutate
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
source('C:/Users/THIRI-~1/AppData/Local/Temp/RtmpIpK27C/chain2.R')
submit()
submit()
submit()
submit()
submit()
install.packages("RMySQL")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
library("httr")
setwd("W:/R/R-course/datasciencecoursera/Getting and Cleaning Data/Quiz 2")
source('W:/R/R-course/datasciencecoursera/Getting and Cleaning Data/Quiz 2/Quiz 2 api pull.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages("httpuv")
source('~/.active-rstudio-document')
source('W:/R/R-course/datasciencecoursera/Getting and Cleaning Data/Quiz 2/Quiz 2 api pull.R')
source('~/.active-rstudio-document')
req
source('W:/R/R-course/datasciencecoursera/Getting and Cleaning Data/Quiz 2/Quiz 2 api pull.R')
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
install.packages("RMySQL")
install.packages("RMySQL")
source('~/.active-rstudio-document')
library(sqldf)
install.packages("sqldf")
library(sqldf)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?read.url
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(acs)
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
sqldf("select pwgtp1 from acs where AGEP < 50")
?sqldf
sqldf("select pwgtp1 from acs where AGEP < 50", drv = getOption("sqldf.driver"),
user, password = "Ebekuiken@3", host = "localhost")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
acs
library(MySQL)
library(mySQL)
library(RMySQL)
sqldf("select pwgtp1 from acs where AGEP < 50")
list.files()
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(RMySQL)
MySQL. <- MySQL()
MySQLcon <- dbConnect(MySQL., user='Thiri-Dae', password='Ebekuiken@3',
dbname='acs')
library(RMySQL)
MySQL. <- MySQL()
MySQLcon <- dbConnect(MySQL., user='Thiri-Dae', password='Ebekuiken@3',
dbname='mydb')
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
sqldf("select distinct AGEP from acs")
SET PASSWORD FOR root@localhost=PASSWORD('');
mysqladmin -u root -pCURRENTPASSWORD password ''
SET PASSWORD FOR root@127.0.0.1=PASSWORD('');
sqldf("select distinct AGEP from acs")
sqldf("select distinct AGEP from acs")
